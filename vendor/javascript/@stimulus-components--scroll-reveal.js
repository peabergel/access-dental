import{Controller as t}from"@hotwired/stimulus";const s=class _ScrollReveal extends t{initialize(){this.intersectionObserverCallback=this.intersectionObserverCallback.bind(this)}connect(){this.class=this.classValue||this.defaultOptions.class||"in",this.threshold=this.thresholdValue||this.defaultOptions.threshold||.1,this.rootMargin=this.rootMarginValue||this.defaultOptions.rootMargin||"0px",this.observer=new IntersectionObserver(this.intersectionObserverCallback,this.intersectionObserverOptions),this.itemTargets.forEach((t=>this.observer.observe(t)))}disconnect(){this.itemTargets.forEach((t=>this.observer.unobserve(t)))}intersectionObserverCallback(t,s){t.forEach((t=>{if(t.intersectionRatio>this.threshold){const e=t.target;e.classList.add(...this.class.split(" ")),e.dataset.delay&&(e.style.transitionDelay=e.dataset.delay),s.unobserve(e)}}))}get intersectionObserverOptions(){return{threshold:this.threshold,rootMargin:this.rootMargin}}get defaultOptions(){return{}}};s.targets=["item"],s.values={class:String,threshold:Number,rootMargin:String};let e=s;export{e as default};

